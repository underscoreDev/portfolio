{
  "social": {
    "email": "gimmex1@gmail.com",
    "github": "https://github.com/Godswilldev",
    "twitter": "https://twitter.com/9th_Creator",
    "linkedIn": "https://www.linkedin.com/in/godswill-edet",
    "resume": "https://drive.google.com/file/d/17M0u9HFYpbRpJLaNYGNtNy5cVzqmGd57/view?usp=sharing"
  },
  "education": [
    {
      "degree": "Cloud Developer Nanodegree",
      "school": "Udacity, Inc.",
      "timeline": { "from": "Jul 2022", "to": "Oct 2022" },
      "summary": "\t• Cloud Foundations - Learnt the fundamentals of cloud computing while being introduced to compute power, security, storage, networking, messaging, and management services in the cloud. \n\t • Full Stack Apps on AWS ‑ Designed and deployed scalable, extendable, and maintainable full stack applications using modern cloud architecture. \n\t• Monolith to Microservices at Scale ‑ Learnt best practices on how to develop and deploy microservices, with a focus on different microservice architecture patterns, independent scaling, resiliency, securing microservices, and best practices for monitoring and logging. \n\t• Develop and Deploy Serverless App ‑ Learnt both the theory of using serverless technologies with the practice of developing a complex server‑less application and focuses on learning by doing. I learnt advanced serverless features such as implementing WebSockets and stream processing."
    },
    {
      "degree": "Fullstack Javascript Developer Nanodegree",
      "school": "Udacity, Inc.",
      "timeline": { "from": "May 2022", "to": "Aug 2022" },
      "summary": "\t• Backend Development with Node.js - Learnt how to work with Node.js and the core modules available, writing TypeScript for developer error reduction, testing with Jasmine to introduce unit testing in a Test Driven Development environment, and working with Express as a framework for building APIs. \n\t • Creating an API with PostgreSQL and Express ‑ This course covers the primary skills required for API development. I built a RESTful JSON API with Node and Postgres. Along the way, I learnt essential topics like databases and querying, API architecture, database migrations, REST, CRUD, creating a testing environment, password hashing and route authorization via JWTs. By completing the exercises and course content, I gained the knowledge to create a secure, well organized API from scratch and learnt skills JavaScript developers use every day. \n\t• Deployment Process (CI/CD, EBk, S3, Circle‑CI) ‑ Learnt how to create a production environment and automate the deployment of code to it. Built automated pipelines and wrote scripts to gain insights into the world of automated deployments."
    },

    {
      "degree": "React Developer Nanodegree",
      "school": "Udacity, Inc.",
      "timeline": { "from": "Jul 2021", "to": "Nov 2021" },
      "summary": "• This was a project‑based learning journey building declarative user interfaces, making state more predictable, and boosting app efficiency and robustness. I also had the opportunity to develop mobile apps for iOS and Android devices using React-native.\n\n\t• React Fundamentals\n\t• React and Redux\n\t• React Native"
    },
    {
      "degree": "BEng. in Electrical Electronics Engineering",
      "school": "Federal University of Technology Owerri, Nigeria.",
      "timeline": { "from": "Jan 2017", "to": "Dec 2022" },
      "summary": "• CGPA: 4.0  \n• Candidate for a Bachelor of Engineering Degree in Electrical Electronics Engineering"
    }
  ],
  "work": [
    {
      "role": "Backend Engineer",
      "location": "Remote, Lagos, Nigeria",
      "company": "Revent Technologies",
      "timeline": { "from": "Jan 2023", "to": "present" },
      "summary": "• Engineered a highly efficient and scalable backend architecture using NestJS, Node.js, and Express, resulting in a 40% increase in system performance. \n• Implemented advanced database management strategies utilizing PostgreSQL and Sequelize, leading to a 60% reduction in query response times. \n• Automated deployment and integration workflows using CircleCI and AWS Elastic Beanstalk, reducing manual errors by 70%. \n• Streamlined data storage and retrieval processes by integrating AWS S3, resulting in a 50% increase in data access speed. \n• Enhanced database reliability by migrating to Amazon RDS, ensuring 100% uptime and reducing downtime by 90%."
    },
    {
      "role": "Backend Engineer",
      "location": "Remote, Ontario, Canada",
      "company": "Yaraa.io",
      "timeline": { "from": "July 2022", "to": "Dec 2022" },
      "summary": "• Revolutionized the application development and deployment process by deploying a powerful CI/CD pipeline using CircleCI, resulting in a 50% reduction in errors and mistakes, a 20% increase in productivity, and a significant boost in customer satisfaction by providing a clear and comprehensive understanding of the development cycle.\n• Designed and deployed integrative endpoints that connected Yaraa.io procurement system with multiple accounting systems, including Microsoft Dynamics 365, Odoo ERP, Amazon Business, Zero Accounting, and Oracle Netsuite, resulting in improved data flow and efficiency.\n• Championed the development efforts for the Yaraa.io platform, updating code, database structure, and endpoints to ensure feature accuracy, leading to a successful go‑live and positive impact on business operations.\n• Transformed the API architecture by implementing a robust and scalable RESTful API using NestJS/NodeJS, integrating with AWS S3, and enriching the customer experience by providing seamless API integration and improved performance."
    },
    {
      "role": "Frontend Engineer",
      "location": "Remote Armsterdam, Netherlands",
      "company": "Zimmerman B.V",
      "timeline": { "from": "Dec 2021", "to": "June 2022" },
      "summary": "• Developed robust and scalable applications in an Agile environment, ensuring project timelines were met and delivering high-quality products with a significant impact on users.\n• Optimized the performance of the company’s current website by utilizing SEO strategies, resulting in a Page Speed performance score of 87.\n• Implemented comprehensive end‑to‑end testing using Cypress Library to guarantee that code met product requirements and ensured a seamless deployment to production.\n• Conducted thorough reviews and testing of customer‑facing prototypes using the cypress library, applying best practices to verify usability, resulting in a smooth deployment process.\n• Delivered websites that were compatible with multiple browsers, ensuring fast‑loading sites with visually appealing layouts, meeting specific requirements and delivering an optimal user experience."
    },
    {
      "role": "Backend Engineer",
      "location": "Remote, Lagos, Nigeria",
      "company": "HNG Internship",
      "timeline": { "from": "Aug 2021", "to": "Nov 2021" },
      "summary": "• Acted in leadership capacity in the design and development of software for a complex web application, by translating software requirements into working and maintainable solutions within the existing application frameworks.\n• Liaised with other developers, designers and DevOps Engineers to identify new features.\n• Implemented pre‑approved UI, constructing API endpoints, connecting the two, and setting up server infrastructure. This includes all associated areas such as database and architecture design.\n• Overseeing and guiding the analyzing, writing, building, and deployment of software.\n• Technical Skills: Redux, SCSS, React, Javascript, NodeJS, ExpressJs Git.\n• Soft Skills: Accountability, Leadership, Communication."
    },
    {
      "role": "Backend Engineer",
      "location": "Lagos, Nigeria",
      "company": "Zuri Team",
      "timeline": { "from": "April 2021", "to": "July 2021" },
      "summary": "• Improved development processes and technologies by recommending and implementing best practices, resulting in a 20% reduction in development time and a 15% increase in overall productivity.\n• Designed and implemented scalable backend services, resulting in a 50% increase in system performance and a reduction of server response time by 30%.\n• Developed and implemented robust security protocols and data protection measures, resulting in zero data breaches and ensuring compliance with industry standards.\n • Collaborated effectively with front‑end developers to integrate new features and functionalities, resulting in a seamless user experience and a 25% reduction in bug reports."
    }
  ],
  "projects": {
    "Contract-Management-API": {
      "name": "Contract Management API",
      "description": "\n \t • A Contract management application built with nestjs. Contract Management Backend API. To automate the lifecycle of a contract between two parties. (From creation to execution). \n \t • TECH STACK: Typescript, NestJS, MySQL, TypeORM, AWS-SDK, CI/CD, Circle-CI, AWS Elastic-Beanstalk, AWS-S3",
      "image_url": "https://raw.githubusercontent.com/Godswilldev/contract-management-api/main/Screenshot%20(139).png",
      "gif_url": "",
      "live_url": "https://con-mgt.up.railway.app/",
      "github_url": "https://github.com/Godswilldev/contract-management-api"
    },

    "Audiophile-Frontend": {
      "name": "Audiophile Frontend",
      "description": "\n \t • Audiophile is a Fullstack e‑commerce online store that sells luxury and branded audio gadgets ranging from earphones, speakers, to headsets. The main aim of this web application is to present the products in the most user‑friendly format and keeping accessibility in mind. \n \t • TECH STACK: Typescript, Redux‑Toolkit, NextJs, Styled-Components, Material-UI, Framer-motion, Formik and Yup for Form Validation.",
      "image_url": "https://res.cloudinary.com/dz209s6jk/image/upload/q_auto,w_700/Challenges/xfevkvpujubwentbteg6.jpg",
      "gif_url": "",
      "live_url": "https://audiophi.vercel.app/",
      "github_url": "https://github.com/Godswilldev/audiophile-frontend"
    },

    "Audiophile-Backend-API": {
      "name": "Audiophile Backend API",
      "description": "\n \t• Backend API for Audiophile e-commerce website.  \n \t• TECH STACK: Typescript, NodeJs, MongoDB, Mongoose, ExpressJs, Flutterwave Webhook API Integration, Sharp (for Image Processing), AWS SDK, Bcrypt and JWT for Authentication",
      "image_url": "https://res.cloudinary.com/dz209s6jk/image/upload/q_auto,w_700/Challenges/xfevkvpujubwentbteg6.jpg",
      "gif_url": "",
      "github_url": "https://github.com/Godswilldev/audiophile-backend",
      "live_url": "https://github.com/Godswilldev/audiophile-backend"
    },

    "Readable": {
      "name": "Readable",
      "description": " \n \t• Readable is a Fullstack content and comment web application similar to reddit built with Next.js for the frontend and NodeJs for the backend, In the app Users will be able to post content to predefined categories, comment on their posts and other users posts, and vote on posts and comments. Users will also be able to edit and delete posts and comments. \n • TECH STACK: Javascript, NodeJs, ExpressJs",
      "image_url": "https://res.cloudinary.com/dz209s6jk/image/upload/q_auto,w_700/Challenges/zbq5rrhkqt63eodwcxcs.jpg",
      "gif_url": "",
      "live_url": "https://readable-342jtfdt1-godswilldev.vercel.app",
      "github_url": "https://github.com/Godswilldev/Readable"
    },

    "would-you-rather": {
      "name": "Would You Rather",
      "description": "\n \t Would you rather is a web app that let's a user play the game Would you Rather?. Users need to be logged in to see the application content and the game goes like this: A user is asked a question in the form: 'Would You Rather? [option A] or [option B]' The app will let users answer questions, see already answered questions, create a new question and see the top 3 users on a ranking leaderboard.",
      "image_url": "https://res.cloudinary.com/dbitfc2gx/image/upload/v1644465274/would-you-rather_eqcdsk.png",
      "gif_url": "",
      "live_url": "https://the-would-you-rather-game.netlify.app",
      "github_url": "https://github.com/Godswilldev/Would_You_Rather"
    },

    "my-reads": {
      "name": "My Reads",
      "description": "\n \t MyReads is a bookshelf app that allows us to select and categorize books that we have read, currently reading, or want to read and also to view details of a particular book on a different page. The project emphasizes using React Fundamentals to build the application and provides an API server and client library to persist information as we interact with the application.",
      "image_url": "https://res.cloudinary.com/dbitfc2gx/image/upload/v1644464021/my-reads1_xsqopn.png",
      "gif_url": "",
      "live_url": "http://my-reads-project.vercel.app/",
      "github_url": "https://github.com/Godswilldev/MyReads-Project"
    }
  }
}
